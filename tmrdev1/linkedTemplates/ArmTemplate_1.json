{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "tmrdev1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DyMemberImage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lksTmrD365",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DynamicsEntity",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DyTrip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lksTmrD365",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DynamicsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "qra_trip"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlTable_TripInsert')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azsqlReportingDBconn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsFileToProcess')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azsqlReportingDBconn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsStringMap')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lksTmrD365",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DynamicsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "stringmap"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsURL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azsqlReportingDBconn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlApplicationImage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azsqlReportingDBconn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "qra_applicationid",
						"type": "uniqueidentifier"
					},
					{
						"name": "qra_crn",
						"type": "nvarchar"
					},
					{
						"name": "entityimage",
						"type": "image"
					},
					{
						"name": "entityimageid",
						"type": "uniqueidentifier"
					},
					{
						"name": "entityimage_timestamp",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "entityimage_url",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ApplicationImages"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlMemberImages')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azsqlReportingDBconn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MemBerImageID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "qra_memberid",
						"type": "uniqueidentifier"
					},
					{
						"name": "qra_crn",
						"type": "nvarchar"
					},
					{
						"name": "entityimage",
						"type": "image"
					},
					{
						"name": "entityimageid",
						"type": "uniqueidentifier"
					},
					{
						"name": "entityimage_timestamp",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "entityimage_url",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "MemberImages"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlStringMap')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azsqlReportingDBconn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "attributevalue",
						"type": "nvarchar"
					},
					{
						"name": "displayorder",
						"type": "int",
						"precision": 10
					},
					{
						"name": "versionnumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "attributename",
						"type": "nvarchar"
					},
					{
						"name": "value",
						"type": "nvarchar"
					},
					{
						"name": "objecttypecode",
						"type": "nvarchar"
					},
					{
						"name": "langid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "organizationid",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "StringMap"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL Send Email Notification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT Send Email On Failure",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set URL variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@variables('logicAppURL')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n    \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\t\"EmailTo\": \"@{pipeline().parameters.EmailTo}\",\n\t\"Subject\": \"@{pipeline().parameters.Subject} \",\n\t\"PipelineName\": \"@{pipeline().parameters.PipelineName}\",\n    \"ErrorMessage\":\"@{pipeline().parameters.ErrorMessage}\",\n\t\"Activity\": \"@{pipeline().parameters.Activity}\",\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set URL variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "retrieveURL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "logicAppURL",
							"value": {
								"value": "@activity('retrieveURL').output.firstRow.StringValue",
								"type": "Expression"
							}
						}
					},
					{
						"name": "retrieveURL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select StringValue from template_Settings where SettingKey = 'webemail_url'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsURL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"EmailTo": {
						"type": "string",
						"defaultValue": "anurudha.kumarkundu@datacom.com.au"
					},
					"Activity": {
						"type": "string",
						"defaultValue": "TestActivity"
					},
					"ErrorMessage": {
						"type": "string",
						"defaultValue": "TestErrorMessage"
					},
					"PipelineName": {
						"type": "string",
						"defaultValue": "Test"
					},
					"Subject": {
						"type": "string",
						"defaultValue": "Test Subject"
					}
				},
				"variables": {
					"logicAppURL": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-08-04T06:20:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsURL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/template_pl_uplod_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy Trip File to Blob Storage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceContainer",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceDirectory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Process Key",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "dbo.template_createprocess",
											"storedProcedureParameters": {
												"Filename": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												"JobId": {
													"type": "Int32",
													"value": "1"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dsFileToProcess",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set Process Key",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set File Container",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ProcessKey",
										"value": {
											"value": "@string(activity('Get Process Key').output.firstRow.ProcessKey)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Process File dummy",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "load file",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "dbo.template_fileprocessing",
										"storedProcedureParameters": {
											"ProcessKey": {
												"value": {
													"value": "@string(variables('ProcessKey'))",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "azsqlReportingDBconn",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "PL Send Email Notification database processing error",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "move to Blob Archive",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL Send Email Notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": {
												"value": "@pipeline().parameters.NotificationEmails",
												"type": "Expression"
											},
											"Activity": "Prepare Trip data",
											"ErrorMessage": {
												"value": "@concat('Error in processing the file ', item().name )",
												"type": "Expression"
											},
											"PipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"Subject": {
												"value": "Datafactory Process error , Trip file processing",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "update log - upload completed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Process File dummy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "dbo.template_updatelogging",
										"storedProcedureParameters": {
											"ErrorMessage": {
												"value": null,
												"type": "String"
											},
											"LogText": {
												"value": "file processing successful",
												"type": "String"
											},
											"ProcessKey": {
												"value": {
													"value": "@variables('ProcessKey')",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "azsqlReportingDBconn",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "move to Blob Archive",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Process File dummy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "BinaryDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@variables('FileContainer')",
													"type": "Expression"
												},
												"Directory": {
													"value": "@variables('FileDir')",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BinaryDataDestination",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@variables('FileContainer')",
													"type": "Expression"
												},
												"Directory": "@concat(variables('FileDir'), '/archived')",
												"filename": "@item().name"
											}
										}
									]
								},
								{
									"name": "update log - file archived",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "move to Blob Archive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "dbo.template_updatelogging",
										"storedProcedureParameters": {
											"ErrorMessage": {
												"value": null,
												"type": "String"
											},
											"LogText": {
												"value": "file archived",
												"type": "String"
											},
											"ProcessKey": {
												"value": {
													"value": "@variables('ProcessKey')",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "azsqlReportingDBconn",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "update process status - successful",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "move to Blob Archive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "dbo.template_updateprocessstatus",
										"storedProcedureParameters": {
											"ProcessKey": {
												"value": {
													"value": "@int(variables('ProcessKey'))",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"status": {
												"value": "successful",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "azsqlReportingDBconn",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "update process status -  failed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "move to Blob Archive",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "dbo.template_updateprocessstatus",
										"storedProcedureParameters": {
											"ProcessKey": {
												"value": {
													"value": "@int(variables('ProcessKey'))",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"status": {
												"value": "failed",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "azsqlReportingDBconn",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "update process status - failed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Process File dummy",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "dbo.template_updateprocessstatus",
										"storedProcedureParameters": {
											"ProcessKey": {
												"value": {
													"value": "@int(variables('ProcessKey'))",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"status": {
												"value": "failed",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "azsqlReportingDBconn",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set File Container",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set File Dir",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileContainer",
										"value": {
											"value": "@string(activity('Get Process Key').output.firstRow.FileContainer)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set File Dir",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Process Key",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileDir",
										"value": {
											"value": "@string(activity('Get Process Key').output.firstrow.FileDir)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "load file",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set Process Key",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "truncate table dbo.template_loadtest",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "loadtestfile",
											"type": "DatasetReference",
											"parameters": {
												"filecontainer": {
													"value": "@variables('FileContainer')",
													"type": "Expression"
												},
												"filedir": {
													"value": "@variables('FileDir')",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "update log - upload on failure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "load file",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "dbo.template_updatelogging",
										"storedProcedureParameters": {
											"ErrorMessage": {
												"value": {
													"value": "@activity('load file').error.message",
													"type": "Expression"
												},
												"type": "String"
											},
											"LogText": {
												"value": "upload failed",
												"type": "String"
											},
											"ProcessKey": {
												"value": {
													"value": "@int(variables('ProcessKey'))",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "azsqlReportingDBconn",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "update log - upload on success",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "load file",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "dbo.template_updatelogging",
										"storedProcedureParameters": {
											"ErrorMessage": {
												"value": null,
												"type": "String"
											},
											"LogText": {
												"value": {
													"value": "@concat('upload completed. Rows loaded: ', activity('load file').output.rowsCopied, '. Rows read: ', activity('load file').output.rowsRead)",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessKey": {
												"value": {
													"value": "@int(variables('ProcessKey'))",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "azsqlReportingDBconn",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy Trip File to Blob Storage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "*.txt",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BinaryFileSource",
								"type": "DatasetReference",
								"parameters": {
									"FileDirectory": {
										"value": "@pipeline().parameters.SourceDirectory",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "BinaryDataDestination",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceContainer",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceDirectory",
										"type": "Expression"
									},
									"filename": "test.xml"
								}
							}
						]
					},
					{
						"name": "PL Send Email Notification_For file copy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy Trip File to Blob Storage",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL Send Email Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": {
									"value": "@pipeline().parameters.NotificationEmails",
									"type": "Expression"
								},
								"Activity": "Copy Trip File to Blob Store",
								"ErrorMessage": "Error in copying Trip File to Blob Store",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Subject": {
									"value": "Datafactor process error, Trip file copy error",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"SourceContainer": {
						"type": "string",
						"defaultValue": "cabcharge"
					},
					"SourceDirectory": {
						"type": "string",
						"defaultValue": "cardupdate"
					},
					"NotificationEmails": {
						"type": "string",
						"defaultValue": "felix.huang@datacom.com.au"
					}
				},
				"variables": {
					"ProcessKey": {
						"type": "String",
						"defaultValue": "0"
					},
					"FileContainer": {
						"type": "String"
					},
					"FileDir": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-08-07T01:37:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL Send Email Notification')]",
				"[concat(variables('factoryId'), '/datasets/dsFileToProcess')]"
			]
		}
	]
}