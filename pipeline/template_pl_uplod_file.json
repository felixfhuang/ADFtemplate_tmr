{
	"name": "template_pl_uplod_file",
	"properties": {
		"activities": [
			{
				"name": "GetFileList",
				"description": "Get the list of file",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Copy Trip File to Blob Storage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "BinaryDataSource_Folder",
						"type": "DatasetReference",
						"parameters": {
							"Container": {
								"value": "@pipeline().parameters.SourceContainer",
								"type": "Expression"
							},
							"Directory": {
								"value": "@pipeline().parameters.SourceDirectory",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "ForEachFile",
				"description": "Iterate each file, and move them one by one.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FilterFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FilterFiles').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Get Process Key",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "dbo.template_createprocess",
									"storedProcedureParameters": {
										"Filename": {
											"type": "String",
											"value": {
												"value": "@item().name",
												"type": "Expression"
											}
										},
										"JobId": {
											"type": "Int32",
											"value": "1"
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "dsFileToProcess",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Set Process Key",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set File Container",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "ProcessKey",
								"value": {
									"value": "@string(activity('Get Process Key').output.firstRow.ProcessKey)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Process File dummy",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "load file",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "dbo.template_fileprocessing",
								"storedProcedureParameters": {
									"ProcessKey": {
										"value": {
											"value": "@string(variables('ProcessKey'))",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "azsqlReportingDBconn",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "PL Send Email Notification database processing error",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "move to Blob Archive",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL Send Email Notification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"EmailTo": {
										"value": "@pipeline().parameters.NotificationEmails",
										"type": "Expression"
									},
									"Activity": "Prepare Trip data",
									"ErrorMessage": {
										"value": "@concat('Error in processing the file ', item().name )",
										"type": "Expression"
									},
									"PipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"Subject": {
										"value": "Datafactory Process error , Trip file processing",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "update log - upload completed",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Process File dummy",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "dbo.template_updatelogging",
								"storedProcedureParameters": {
									"ErrorMessage": {
										"value": null,
										"type": "String"
									},
									"LogText": {
										"value": "file processing successful",
										"type": "String"
									},
									"ProcessKey": {
										"value": {
											"value": "@variables('ProcessKey')",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "azsqlReportingDBconn",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "move to Blob Archive",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Process File dummy",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "BinaryDataSource_File",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@variables('FileContainer')",
											"type": "Expression"
										},
										"Directory": {
											"value": "@variables('FileDir')",
											"type": "Expression"
										},
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "BinaryDataDestination",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@variables('FileContainer')",
											"type": "Expression"
										},
										"Directory": "@concat(variables('FileDir'), '/archived')",
										"filename": "@item().name"
									}
								}
							]
						},
						{
							"name": "update log - file archived",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "move to Blob Archive",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "dbo.template_updatelogging",
								"storedProcedureParameters": {
									"ErrorMessage": {
										"value": null,
										"type": "String"
									},
									"LogText": {
										"value": "file archived",
										"type": "String"
									},
									"ProcessKey": {
										"value": {
											"value": "@variables('ProcessKey')",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "azsqlReportingDBconn",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "update process status - successful",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "move to Blob Archive",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "dbo.template_updateprocessstatus",
								"storedProcedureParameters": {
									"ProcessKey": {
										"value": {
											"value": "@int(variables('ProcessKey'))",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"status": {
										"value": "successful",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "azsqlReportingDBconn",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "update process status -  failed",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "move to Blob Archive",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "dbo.template_updateprocessstatus",
								"storedProcedureParameters": {
									"ProcessKey": {
										"value": {
											"value": "@int(variables('ProcessKey'))",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"status": {
										"value": "failed",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "azsqlReportingDBconn",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "update process status - failed",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Process File dummy",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "dbo.template_updateprocessstatus",
								"storedProcedureParameters": {
									"ProcessKey": {
										"value": {
											"value": "@int(variables('ProcessKey'))",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"status": {
										"value": "failed",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "azsqlReportingDBconn",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Set File Container",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set File Dir",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "FileContainer",
								"value": {
									"value": "@string(activity('Get Process Key').output.firstRow.FileContainer)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set File Dir",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get Process Key",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "FileDir",
								"value": {
									"value": "@string(activity('Get Process Key').output.firstrow.FileDir)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "load file",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set Process Key",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": "truncate table dbo.template_loadtest",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "loadtestfile",
									"type": "DatasetReference",
									"parameters": {
										"filecontainer": {
											"value": "@variables('FileContainer')",
											"type": "Expression"
										},
										"filedir": {
											"value": "@variables('FileDir')",
											"type": "Expression"
										},
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "update log - upload on failure",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "load file",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "dbo.template_updatelogging",
								"storedProcedureParameters": {
									"ErrorMessage": {
										"value": {
											"value": "@activity('load file').error.message",
											"type": "Expression"
										},
										"type": "String"
									},
									"LogText": {
										"value": "upload failed",
										"type": "String"
									},
									"ProcessKey": {
										"value": {
											"value": "@int(variables('ProcessKey'))",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "azsqlReportingDBconn",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "update log - upload on success",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "load file",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "dbo.template_updatelogging",
								"storedProcedureParameters": {
									"ErrorMessage": {
										"value": null,
										"type": "String"
									},
									"LogText": {
										"value": {
											"value": "@concat('upload completed. Rows loaded: ', activity('load file').output.rowsCopied, '. Rows read: ', activity('load file').output.rowsRead)",
											"type": "Expression"
										},
										"type": "String"
									},
									"ProcessKey": {
										"value": {
											"value": "@int(variables('ProcessKey'))",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "azsqlReportingDBconn",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "FilterFiles",
				"description": "Only files will be selected, the source-folders will not be selected.",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "GetFileList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFileList').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().type, 'File')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy Trip File to Blob Storage",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureFileStorageReadSettings",
							"recursive": false,
							"wildcardFileName": "*.txt",
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "BinaryFileSource",
						"type": "DatasetReference",
						"parameters": {
							"FileDirectory": {
								"value": "@pipeline().parameters.SourceDirectory",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "BinaryDataDestination",
						"type": "DatasetReference",
						"parameters": {
							"Container": {
								"value": "@pipeline().parameters.SourceContainer",
								"type": "Expression"
							},
							"Directory": {
								"value": "@pipeline().parameters.SourceDirectory",
								"type": "Expression"
							},
							"filename": "test.xml"
						}
					}
				]
			},
			{
				"name": "PL Send Email Notification_For file copy",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Copy Trip File to Blob Storage",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL Send Email Notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"EmailTo": {
							"value": "@pipeline().parameters.NotificationEmails",
							"type": "Expression"
						},
						"Activity": "Copy Trip File to Blob Store",
						"ErrorMessage": "Error in copying Trip File to Blob Store",
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Subject": {
							"value": "Datafactor process error, Trip file copy error",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"SourceContainer": {
				"type": "string",
				"defaultValue": "cabcharge"
			},
			"SourceDirectory": {
				"type": "string",
				"defaultValue": "cardupdate"
			},
			"NotificationEmails": {
				"type": "string",
				"defaultValue": "felix.huang@datacom.com.au"
			}
		},
		"variables": {
			"ProcessKey": {
				"type": "String",
				"defaultValue": "0"
			},
			"FileContainer": {
				"type": "String"
			},
			"FileDir": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2020-08-07T01:37:41Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}